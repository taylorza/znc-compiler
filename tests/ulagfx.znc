//make dot "/dot/ulagfx";
make dot "ulagfx.dot";

include "memory.znc"

void setpixel(int x, int y) __asm__ {
  push ix
  ld ix,0
  add ix,sp

  ld e,(ix+6) ; X
  ld d,(ix+4) ; Y
  pixelad
  setae
  or (hl)
  ld (hl),a

  pop ix
  ret
}

int abs(int x) {
  if (x<0) x=-x;
  return x;
}

void line(int x0, int y0, int x1, int y1) {
  int dx=abs(x1-x0);
  int sx=x0<x1?1:-1;
  int dy=-abs(y1-y0);
  int sy=y0<y1?1:-1;

  int err=dx+dy;
  for(;;) {
    setpixel(x0, y0);
    int e2=err<<1;
    if (e2>=dy) {
      if (x0==x1) break;
      err=err+dy;
      x0=x0+sx;
    }
    if (e2<=dx) {
        if (y0==y1) break;
        err=err+dx;
        y0=y0+sy;
    }
  }
}

void circle(int xc, int yc, int r) {
  int r2=r+r;
  int x=r;
  int y=0;
  int dy=-2;
  int dx=r2+r2-4;
  int d=r2-1;
  while(y<=x) {
    setpixel(xc+x, yc+y);
    setpixel(xc-x, yc+y);
    setpixel(xc+x, yc-y);
    setpixel(xc-x, yc-y);
    setpixel(xc+y, yc+x);
    setpixel(xc-y, yc+x);
    setpixel(xc+y, yc-x);
    setpixel(xc-y, yc-x);

    d=d+dy;
    dy=dy-4;
    y=y+1;
    int mask=d>>31;
    d=d+(dx & mask);
    dx=dx-(4 & mask);
    x=x+mask;  
  }
}

nextreg(7,3);

// clear the screen
memset(16384,0,6144);

// draw the ruler markings
for(int y=0;y<190;y=y+10) {
  line(0,y,25,y);
  for (int yy=y+2;yy<y+10 && yy<192;yy=yy+2) {
    line(0,yy,10,yy);
  }
}

for(;;) {
  __asm__{
    ei
    halt
    di    
  }
  for(int i=0;i<280;i=i+1);
  out(0xfe,1);
  circle(88,80,30);
  out(0xfe,2);
  line(30,30,50,30);
  out(0xfe,3);
  line(30,30,46,19);

  out(0xfe,7);
  if ((in(0x7ffe) & 0x01) == 0) break;
}
